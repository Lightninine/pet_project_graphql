version: '3'

services:
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./backend/pet_project:/usr/src/app
    env_file:
      - ./.env.dev
    depends_on:
      - gunicorn
    links:
      - gunicorn
    command: /bin/bash -c "envsubst '$${DAPHNE_HOST} $${DAPHNE_PORT} $${NGINX_PORT} $${NGINX_HOST}' < /etc/nginx/conf.d/service.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
  db:
    image: library/postgres:12
    env_file:
      - ./.env.dev
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
  redis:
    image: redis:alpine
    container_name: rd02
    ports:
      - '6379:6379'
  daphne:
    build:
      context: ./backend
    ports:
      - "8001:8001"
    volumes:
      - ./backend/pet_project:/usr/src/app
    command: >
      bash -c "daphne -b 0.0.0.0 -p 8001 pet_project.asgi:application"
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - gunicorn
    links:
      - redis
  gunicorn:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/pet_project:/usr/src/app
    command: >
      bash -c "python3 manage.py makemigrations --noinput &&
             python3 manage.py migrate &&
             printf 'yes' | python3 manage.py collectstatic &&
             python3 manage.py wait_for_db &&
             python3 manage.py initadmin &&
             gunicorn pet_project.wsgi:application --forwarded-allow-ips='*' --workers=4 --log-level info --bind 0.0.0.0:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
    links:
      - redis
volumes:
  pgdata: